import sys
input = sys.stdin.readline
n, m = map(int, input().split())
board = [list(map(int, input().split())) for _ in range(n)]
tetro = [((0,0),(1,0),(2,0),(3,0)),
     ((0,0),(0,1),(0,2),(0,3)),
     ((0,0),(1,0),(2,0),(2,1)),
     ((0,0),(1,0),(2,0),(2,-1)),
     ((0,0),(-1,0),(-2,0),(-2,-1)),
     ((0,0),(-1,0),(-2,0),(-2,1)),
     ((0,0),(0,1),(0,2),(1,2)),
     ((0,0),(0,1),(0,2),(-1,2)),
     ((0,0),(0,-1),(0,-2),(1,-2)),
     ((0,0),(0,-1),(0,-2),(-1,-2)),
     ((0,0),(0,1),(1,1),(1,2)),
     ((0,0),(1,0),(1,-1),(2,-1)),
     ((0,0),(0,1),(-1,1),(-1,2)),
     ((0,0),(1,0),(1,1),(2,1)),
     ((0,0),(1,0),(-1,0),(0,1)),
     ((0,0),(1,0),(-1,0),(0,-1)),
     ((0,0),(1,0),(0,1),(0,-1)),
     ((0,0),(-1,0),(0,1),(0,-1)),
     ((0,0),(1,0),(0,1),(1,1))
     ]
ans = 0

def search(r,c):
    global n, m, ans
    for case in tetro:
        temp = 0
        for dr, dc in case:
            nr, nc = r+dr, c+dc
            if 0<=nr<n and 0<=nc<m:
                temp += board[nr][nc]
            else:
                break
        else:
            ans = max(ans, temp)


for i in range(n):
    for j in range(m):
        search(i,j)

print(ans)